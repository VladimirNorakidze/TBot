import time
import re
import requests
import io
import numpy as np
from PIL import Image
import emoji
import vk_api
from vk_api.longpoll import VkLongPoll, VkEventType
import logger
import analyzer as a

TOKEN = "TOKEN"  # for hakaton

bot_activation = False
vk_session = vk_api.VkApi(token=TOKEN)
longpoll = VkLongPoll(vk_session)
upload = vk_api.VkUpload(vk_session)

vk = vk_session.get_api()

start_time = time.time()
cache = []


def activating_bot(event, continue_status):
    """
    –§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è —É–∫–∞–∑—ã–≤–∞–µ—Ç –±–æ—Ç—É, –∂–¥–µ—Ç
    –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç –Ω–µ–≥–æ —Å–æ–≤–µ—Ç–æ–≤ –∏–ª–∏ –Ω–µ—Ç
    """
    status = bot_activation
    if "/start" in event.text.lower() and not status:
        msg = '''–û, –ø—Ä–∏–≤–µ—Ç, {}).'''.format(vk.users.get(user_id=event.user_id)[0]["first_name"])
        vk.messages.send(user_id=event.user_id, message=msg, random_id=0)
        status = True
        continue_status = True
    elif bot_activation and ("/stop" in event.text.lower()):
        msg = "–ü–æ–∫–∞ ‚úåÔ∏è –ó–∞—Ö–æ—á–µ—à—å –ø–æ–±–æ–ª—Ç–∞—Ç—å - –ø–∏—à–∏ /start"
        vk.messages.send(user_id=event.user_id, message=msg, random_id=0)
        status = False
        continue_status = True
    return status, continue_status


def check_emoji(text):
    """
    –§—É–Ω–∫—Ü–∏—è, –ø—Ä–æ–≤–µ—Ä—è—é—â–∞—è, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Å—Ç–æ–∏—Ç –Ω–µ –∏–∑ –æ–¥–Ω–æ–≥–æ —Å–º–∞–π–ª–∏–∫–∞
    """
    f = lambda x: bool(emoji.get_emoji_regexp().search(x))
    text = emoji.get_emoji_regexp().split(text)
    if not (text[0] or text[-1]):
        if len(text) == 3 and f(text[1]):
            return True
        elif len(text) == 5:
            if f(text[1]) and (text[2] == "\u200d") and f(text[3]):
                return True
        else:
            return False
    else:
        return False


def photo_sender(user_id, url, product_id):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è—é—â–∞—è —Ñ–æ—Ç–æ –∏ —Å—Å—ã–ª–∫—É –Ω–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –Æ–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    """
    response = requests.get(url)
    img = Image.open(io.BytesIO(response.content))
    img = np.array(img).T
    byte_img = io.BytesIO()
    Image.fromarray(img.T, mode="RGB").save(byte_img, "JPEG")
    byte_img.seek(0)
    ans = upload.photo_messages(photos=byte_img)[0]
    owner_id, media_id = ans["owner_id"], ans["id"]
    prod_url = 'https://youla.io/p' + str(product_id)
    vk.messages.send(user_id=user_id, attachment=f"photo{owner_id}_{media_id}", random_id=0)
    vk.messages.send(user_id=user_id, message=prod_url, random_id=0)


def img_proc(url):
    """
    –§—É–Ω–∫—Ü–∏—è, –ø–æ–ª—É—á–∞—é—â–∞—è url –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏
    –≤—ã–∑—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—é-–∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    """
    response = requests.get(url)
    return a.img_analyzer(response)


def photo_msg(msg):
    """
    –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ —Ç–∏–ø–µ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è '—Ñ–æ—Ç–æ'
    """
    uid = msg.user_id
    vk.messages.send(user_id=uid, message="üòÆ", random_id=0)
    vk.messages.send(user_id=uid, reply_to=msg.message_id, message="–≠—Ç–æ —á—Ç–æ... –ö–∞—Ä—Ç–∏–Ω–∫–∞???", random_id=0)
    vk.messages.send(user_id=uid, message="–°–º–æ—Ç—Ä–∏, —Ç–µ–±–µ –º–æ–∂–µ—Ç –µ—â–µ –ø–æ–Ω—Ä–∞–≤–∏—Ç—å—Å—è —ç—Ç–æ)", random_id=0)
    url = vk.messages.getHistoryAttachments(peer_id=event.user_id, media_type="photo",
                                            count=1)["items"][-1]["attachment"]["photo"]["sizes"][-1]["url"]
    urls, titles, prod_id, _ = img_proc(url)
    time.sleep(1)
    for i, url in enumerate(urls):
        photo_sender(user_id=uid, url=url, product_id=prod_id[i])
    vk.messages.send(user_id=uid, message="–•–æ–±–∞!", random_id=0)
    return titles


def text_msg(msg):
    """
    –§—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø—Ä–∏ —Ç–∏–ø–µ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è '—Ç–µ–∫—Å—Ç' –∏–ª–∏ 'url'
    """
    uid = msg.user_id
    if (msg.text.lower() == '–µ—â–µ' or msg.text.lower() == '–µ—â—ë'):
        urls, titles, prod_id, msg_status = a.wa_analyzer()
        if msg_status:
            vk.messages.send(user_id=uid, message="–û–¥–Ω—É —Å–µ–∫—É–Ω–¥–æ—á–∫—É...", random_id=0)
            time.sleep(1)
            for i, url in enumerate(urls):
                photo_sender(user_id=uid, url=url, product_id=prod_id[i])
            vk.messages.send(user_id=uid, message="–•–æ–±–∞!", random_id=0)
        else:
            vk.messages.send(user_id=uid, message=urls, random_id=0)
    elif not ("http" in msg.text):
        urls, titles, prod_id, _ = a.wa_analyzer(text=msg.text)
        vk.messages.send(user_id=uid, message="–û–¥–Ω—É —Å–µ–∫—É–Ω–¥–æ—á–∫—É...", random_id=0)
        time.sleep(1)
        for i, url in enumerate(urls):
            photo_sender(user_id=uid, url=url, product_id=prod_id[i])
        vk.messages.send(user_id=uid, message="–•–æ–±–∞!", random_id=0)
    else:
        pattern = r"^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!\$&'\(\)\*\+,;=.]+[.](jpg|jpeg|png|gif)$"
        if re.match(pattern, msg.text, re.IGNORECASE):
            vk.messages.send(user_id=uid, message="–°–µ–π—á–∞—Å, —Å–∫–∞—á–∞—é –∏ –ø—Ä–∏—à–ª—é", random_id=0)
            time.sleep(1)
            urls, titles, prod_id, _ = img_proc(url=msg.text)
            for i, url in enumerate(urls):
                photo_sender(user_id=uid, url=url, product_id=prod_id[i])
            vk.messages.send(user_id=uid, message="–•–æ–±–∞!", random_id=0)
        else:
            vk.message.send(user_id=uid, text=r"–Ø –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç—É—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É... –ü—Ä–æ–≤–µ—Ä—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —á—Ç–æ "
                                              r"—Å—Å—ã–ª–∫–∞ –æ–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –Ω–∞ .jpg, .jpeg, .png –∏–ª–∏ .gif...")
            titles = []
    return titles


for event in longpoll.listen():
    continue_status = False
    if event.type == VkEventType.MESSAGE_NEW and event.to_me and event.text:
        bot_activation, continue_status = activating_bot(event, continue_status)
        if continue_status:
            continue
        if bot_activation:
            if check_emoji(event.text):
                name = vk.users.get(user_id=event.user_id)[0]["first_name"]
                ans = f"{name}, —è –Ω–µ —Å–º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è—â–µ–µ –∏–∑ –æ–¥–Ω–æ–≥–æ —Å–º–∞–π–ª–∞..."
                ans += "–ü—Ä–∏—à–ª–∏ —Ç–æ, —á—Ç–æ —Ö–æ—Ç–µ–ª –±—ã —É–≤–∏–¥–µ—Ç—å :3"
                vk.messages.send(user_id=event.user_id, message=ans, random_id=0)
                cache, start_time = logger.logger_vk(event, ans, cache, start_time)
            else:
                ans = text_msg(event)
                cache, start_time = logger.logger_vk(event, ans, cache, start_time)
        else:
            service_msg = "–í–≤–µ–¥–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å"
            vk.messages.send(user_id=event.user_id, message=service_msg, random_id=0)
            cache, start_time = logger.logger_vk(event, "Bot is not activated", cache, start_time)
    elif event.type == VkEventType.MESSAGE_NEW and event.to_me and event.attachments["attach1_type"] == "photo":
        bot_activation, continue_status = activating_bot(event, continue_status)
        if continue_status:
            continue
        if bot_activation:
            ans = photo_msg(event)
            cache, start_time = logger.logger_vk(event, ans, cache, start_time)
        else:
            service_msg = "–í–≤–µ–¥–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å"
            vk.messages.send(user_id=event.user_id, message=service_msg, random_id=0)
            cache, start_time = logger.logger_vk(event.text, "Bot is not activated", cache, start_time)
    elif event.type == VkEventType.MESSAGE_NEW and event.to_me and (event.attachments["attach1_type"] == "doc"
            or event.attachments["attach1_type"] == "sticker"):
        bot_activation, continue_status = activating_bot(event, continue_status)
        if continue_status:
            continue
        if bot_activation:
            service_msg = "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ —ç—Ç–æ üò≠üò≠üò≠"
            vk.messages.send(user_id=event.user_id, reply_to=event.message_id, message=service_msg, random_id=0)
            service_msg = "–û–ø–∏—à–∏, —á—Ç–æ —Ö–æ—á–µ—à—å –∏–ª–∏ –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–∫—É("
        else:
            service_msg = "–í–≤–µ–¥–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å"
        vk.messages.send(user_id=event.user_id, message=service_msg, random_id=0)
